name: Release

env:
  sln-path: "./src/lexicon.sln"
  build-dir: "build"
  package-dir: "packages"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ '2.0.x', '7.0.x' ]

    # required by dorny/test-reporter
    permissions:
      contents: read
      id-token: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .Net ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: .Net info
        run: dotnet --info

      - name: Restore dependencies
        run: dotnet restore "${{ env.sln-path }}"

      - name: Build release
        run: dotnet build "${{ env.sln-path }}" --no-restore

      - name: Test
        run: dotnet test "${{ env.sln-path }}" --no-build --logger "trx;LogFileName=test-results.trx" || true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Tests ${{ matrix.dotnet-version }}
          path: "**/test-results.trx"
          reporter: dotnet-trx
          fail-on-error: true

      - name: Publish
        run: dotnet publish "${{ env.sln-path }}" -c Release -o "${{ env.build-dir }}" --no-build

      - name: Pack
        run: dotnet pack "${{ env.sln-path }}" -c Release -o "${{ env.build-dir }}" --no-build

      - name: Upload artifact - binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: "${{ env.build-dir }}"
          retention-days: 90

      - name: Upload artifact - packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: "${{ env.package-dir }}"
          retention-days: 90

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: binaries
          path: "${{ env.build-dir }}"

      - name: Zip binaries
        uses: vimtor/action-zip@v1
        with:
          files: "${{ env.build-dir }}"
          dest: binaries.zip

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          prerelease: true
          draft: true
          generate_release_notes: true
          files: binaries.zip

      - name: Remove old releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 8
          delete_tags: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
